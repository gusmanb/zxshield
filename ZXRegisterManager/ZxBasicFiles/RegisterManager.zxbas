#include <input.bas>

dim register as ubyte
dim regType as ubyte
dim regRead as ubyte
dim regWrite as ubyte
dim regLen as uByte

rem *******************Funciones**********************

sub screenCleanup()

	cls
	print at 0,10;paper 1; ink 7; flash 1; "ZX REGISTERS"
	print " "

end sub

sub selectRegister()

	dim sReg as string
	dim iReg as uinteger
	dim bReg as ubyte

regSelLoop:

	print " "

	print "Select register (0-255)"

	sReg = input(3)
	iReg = val(sReg)

	if iReg > 255 then
		print "Wrong register"
		goto regSelLoop
	end if

	register = val(sReg)

	print ""

	print "Selected register: "; register

	out 241, register

	bReg = in 241

	regType = bReg bAnd 3
	regRead = bReg bAnd 4
	regWrite = bReg bAnd 8

	print "Received config: "; bReg

	if regType = 0 then
		print "Register type: byte"
	elseif regType = 1 then
		print "Register type: integer"
	elseif regType = 2
		print "Register type: stream"
	else
		print "Unknown register type!"
	end if

	if regRead then
		print "Read allowed"
	else
		print "Read disallowed"
	end if

	if regWrite then
		print "Write allowed"
	else
		print "Write disallowed"
	end if

	dim reglen as byte

	do
		regLen = in 243
    loop while reglen = 250

	print "Register length: "; regLen

end sub

function selectOperation() as string

	dim st as string

selectOpAgain:

	print " "
	print "Choose operation:"
	print ""
	print "    (e)nable register"
	print "    (r)ead register"
	print "    (w)rite register"
	print "    (l)eave"

	st = input(1)

	if st <> "e" and st <> "r" and st <> "w" and st <> "l"
		print "Incorrect operation"
		goto selectOpAgain
	end if

	return st

end function

sub readRegister()

	print " "

	if not regRead then
		print "Not readable"
		return
	end if

	if regType = 0 then
		print "Byte value: "; in 245
	elseif regType = 1 then
		
		dim iVal as ulong
        dim tVal as ulong
        tVal = in 245
		iVal = tVal << 24
        tVal = in 245
		iVal = iVal bOr (tVal << 16)
        tVal = in 245
		iVal = iVal bOr (tVal << 8)
        tVal = in 245
		iVal = iVal bOr tVal

		print "Integer value: "; iVal

	else if regType = 2 then
		
		print "Reading stream..."

		dim buf as string
		dim rl as uinteger
		for rl = 1 to regLen
			buf = buf + chr$(in 245)
		next rl

		print "Stream value:"
		print buf

	else
		print "Unknown register type!"
	end if

end sub

sub writeRegister()

	print " "

	if not regWrite then
		print "Not writeable"
		return
	end if

	if regType = 0 then
		print "Value?"
		dim bVal as ubyte
		bVal = val(input(3))
		out 245, bVal
	elseif regType = 1 then
		print "Value?"
		dim iVal as ulong
		iVal = val(input(10))
		out 245, (iVal >> 24) bAnd 255
		out 245, (iVal >> 16) bAnd 255
		out 245, (iVal >> 8) bAnd 255
		out 245, iVal bAnd 255
	else if regType = 2 then
		print "Value?"
		dim sVal as string
		sVal = input(64)
		dim sLen as ubyte
		sLen = len sVal

		print "Sending "; sLen; " bytes stream..."

		out 243, sLen

		dim wl as uinteger
		for wl = 0 to sLen - 1
			out 245, code sVal(wl to wl)
		next wl

		print "Stream sent"

	else
		print "Unknown register type!"
	end if

end sub


rem *******************PROGRAMA**********************

screenCleanup()

selectRegister()

dim op as string

do

op = selectOperation()

screenCleanup()

if op = "e" then
	selectRegister()
elseif op = "r" then
	readRegister()
elseif op = "w" then
	writeRegister()
else
	print "Bye!"
	exit do
end if

loop
